# -*- coding: utf-8 -*-
"""pothole_yolov8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RzLJR2XhwLScsSEyF0kkXDWcz3xKCauD
"""

# pip install ultralytics  (depending on your environment)

import os
from ultralytics import YOLO

# Define training parameters
yaml_path = "/content/drive/MyDrive/Pothole-detection/pothole.yaml"
project = "detection"
name = "yolov8_pothole"
checkpoint_dir = f"{project}/{name}/weights"
resume_path = f"{checkpoint_dir}/last.pt"

# Check if a previous training checkpoint exists
if os.path.exists(resume_path):
    print(f"Resuming training from: {resume_path}")
    model = YOLO(resume_path)
else:
    print("Starting training from scratch.")
    model = YOLO("yolov8l.pt")  # or yolov8n.pt / yolov8m.pt as needed

# Start or resume training
results = model.train(
    data=yaml_path,
    epochs=50,
    imgsz=640,
    batch=16,
    project=project,
    name=name,
    exist_ok=True,
    resume=os.path.exists(resume_path)  # auto-resume if checkpoint exists
)

# Load the trained model
model = YOLO("/content/detection/yolov8_pothole/weights/best.pt")

# Inference on a test image
results = model("/content/108.jpg", save=True)

# Show bounding box coordinates
for r in results:
    boxes = r.boxes
    for box in boxes:
        coords = box.xyxy[0].tolist()  # [x1, y1, x2, y2]
        conf = box.conf[0].item()
        print(f"BBox: {coords}, Confidence: {conf:.2f}")

from IPython.display import Image, display
display(Image(filename="runs/detect/predict/108.jpg"))